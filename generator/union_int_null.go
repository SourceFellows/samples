// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCE:
 *     user.avsc
 */
package generator

import (
	"io"
	"fmt"

	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/vm/types"
)


type UnionIntNullTypeEnum int
const (

	 UnionIntNullTypeEnumInt UnionIntNullTypeEnum = 0

	 UnionIntNullTypeEnumNull UnionIntNullTypeEnum = 1

)

type UnionIntNull struct {

	Int int32

	Null *types.NullVal

	UnionType UnionIntNullTypeEnum
}

func writeUnionIntNull(r *UnionIntNull, w io.Writer) error {
	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType{
	
	case UnionIntNullTypeEnumInt:
		return vm.WriteInt(r.Int, w)
        
	case UnionIntNullTypeEnumNull:
		return vm.WriteNull(r.Null, w)
        
	}
	return fmt.Errorf("invalid value for *UnionIntNull")
}

func NewUnionIntNull() *UnionIntNull {
	return &UnionIntNull{}
}

func (_ *UnionIntNull) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *UnionIntNull) SetInt(v int32) { panic("Unsupported operation") }
func (_ *UnionIntNull) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *UnionIntNull) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *UnionIntNull) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *UnionIntNull) SetString(v string) { panic("Unsupported operation") }
func (r *UnionIntNull) SetLong(v int64) { 
	r.UnionType = (UnionIntNullTypeEnum)(v)
}
func (r *UnionIntNull) Get(i int) types.Field {
	switch (i) {
	
	case 0:
		
		
		return (*types.Int)(&r.Int)
		
	
	case 1:
		
		
		return r.Null
		
	
	}
	panic("Unknown field index")
}
func (_ *UnionIntNull) SetDefault(i int) { panic("Unsupported operation") }
func (_ *UnionIntNull) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *UnionIntNull) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *UnionIntNull) Finalize()  { }
