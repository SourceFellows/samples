// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCE:
 *     user.avsc
 */
package generator

import (
	"io"
	"github.com/actgardner/gogen-avro/vm/types"
	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/compiler"
)

  
type User struct {

	
	
		Name string
	

	
	
		Favorite_number int32
	

	
	
		Favorite_color string
	

}

func NewUser() (*User) {
	return &User{}
}

func DeserializeUser(r io.Reader) (*User, error) {
	t := NewUser()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err	
	}
	return t, err
}

func DeserializeUserFromSchema(r io.Reader, schema string) (*User, error) {
	t := NewUser()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err	
	}
	return t, err
}

func writeUser(r *User, w io.Writer) error {
	var err error
	
	err = vm.WriteString( r.Name, w)
	if err != nil {
		return err			
	}
	
	err = vm.WriteInt( r.Favorite_number, w)
	if err != nil {
		return err			
	}
	
	err = vm.WriteString( r.Favorite_color, w)
	if err != nil {
		return err			
	}
	
	return err
}

func (r *User) Serialize(w io.Writer) error {
	return writeUser(r, w)
}

func (r *User) Schema() string {
	return "{\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"favorite_number\",\"type\":\"int\"},{\"name\":\"favorite_color\",\"type\":\"string\"}],\"name\":\"example.avro.User\",\"type\":\"record\"}"
}

func (r *User) SchemaName() string {
	return "example.avro.User"
}

func (_ *User) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *User) SetInt(v int32) { panic("Unsupported operation") }
func (_ *User) SetLong(v int64) { panic("Unsupported operation") }
func (_ *User) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *User) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *User) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *User) SetString(v string) { panic("Unsupported operation") }
func (_ *User) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *User) Get(i int) types.Field {
	switch (i) {
	
	case 0:
		
		
			return (*types.String)(&r.Name)
		
	
	case 1:
		
		
			return (*types.Int)(&r.Favorite_number)
		
	
	case 2:
		
		
			return (*types.String)(&r.Favorite_color)
		
	
	}
	panic("Unknown field index")
}

func (r *User) SetDefault(i int) {
	switch (i) {
	
        
	
        
	
        
	
	}
	panic("Unknown field index")
}

func (_ *User) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *User) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *User) Finalize() { }
